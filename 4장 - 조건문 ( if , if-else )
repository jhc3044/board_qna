# study

if문 : 조건식이 참(True)일 때 , { } 안의 문장들을 수행한다.

[ if ] ==> 블럭 { } : 여러 문장을 하나로 묶어주는 것.  
  
    if (score > 60)
    { =>> 블럭의 시작
        System.out.println("합격입니다.");
    } =>> 블럭의 끝
        
# [ if-else ] : 둘중의 하나 - 조건식이 참일때 또는 거짓일때 나눠서 처리 

    if (조건식) {
      // 조건식이 참(True)일 수행되는 문장을 적는다.
      } 
    else {
      // 조건식이 거짓(false)일때 수행되는 문장을 적는다.
      }
      
      예제) if (input == 0) {
        System.out.println("0입니다.");
        }
        else {
          System.out.println("0이 아닙니다.");
          }
          
# [if - else - if] : 여러 개중의 하나 , 여러개의 조건식을 포함한 조건식

    if (조건식1) {
        // 조건식1의 연산결과가 참일때 수행될 문장을 적는다.
        }
    else if (조건식2) {
        // 조건식2의 연산결과가 참일때 수행될 문장을 적는다.
        }
    
    else if (조건식3) {
        // 조건식3의 연산결과가 참일때 수행될 문장을 적는다.
        // 여러개의 else if를 사용할수가 있다.
        }
    else {
        // 위의 어느 조건식도 만족하지 않으면 수행될 문장을 적는다.
        // 마지막은 보통 else 블럭으로 끝나며 , else 블럭은 생략이 가능하다.
        }
    
    예제)  
    
    if(score >= 90){ 
      grade = "A";
     } else if(score >= 80){
      grade = "B";
     } else if(score >= 70){
      grade = "C";
     } else {
      grade = "D";
     }
     
     1) 결과가 참인 조건식을 만날때까지 첫 번째 조건식부터 순서대로 진행한다.(첫 번째 조건식이 거짓이면 , 두번째 조건식으로 넘어간다.)
     2) 참인 조건식을 만나면 , 해당 블럭{ }의 문장을 수행을 한다.
     3) if else if문 전체를 빠져나간다.
     
     실습) 

